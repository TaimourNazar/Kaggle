{"cells":[{"source":"<a href=\"https://www.kaggle.com/code/taimour/ensemble-7-models-stackingcvregressor-titanic?scriptVersionId=195948650\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","id":"2592fd74","metadata":{"papermill":{"duration":0.008687,"end_time":"2024-09-09T15:02:36.373051","exception":false,"start_time":"2024-09-09T15:02:36.364364","status":"completed"},"tags":[]},"source":["# Understanding Data, Files and Goals"]},{"cell_type":"markdown","id":"20316b9c","metadata":{"papermill":{"duration":0.007324,"end_time":"2024-09-09T15:02:36.388298","exception":false,"start_time":"2024-09-09T15:02:36.380974","status":"completed"},"tags":[]},"source":["**Data Fields**\n","\n","**PassengerId:** A unique identifier for each passenger.\n","\n","**HomePlanet:** The planet the passenger is from.\n","\n","**CryoSleep:** Whether the passenger was put into suspended animation during the journey.\n","\n","**Cabin:** The location of the passenger's cabin on the ship.\n","\n","**Destination:** The planet the passenger is traveling to.\n","\n","**Age:** The age of the passenger.\n","\n","**VIP:** Indicates if the passenger has VIP status.\n","\n","**RoomService:** Amount spent for room service\n","\n","**FoodCourt:** Amount spent in food court\n","\n","**ShoppingMall:** Amount spent in shopping mall\n","\n","**Spa:** Amount spent in spa\n","\n","**VRDeck:** Amount spent for VRDeck\n","\n","**Name:** The passenger's name.\n","\n","**Transported:** The target variable indicating whether the passenger was transported.\n","\n","\n","**Files**\n","\n","The **train.csv** file contains data for training a machine learning model to predict transportation.\n","\n","The **test.csv** file contains data for testing the model's performance on unseen data.\n","\n","The **sample_submission.csv** file is a template for submitting predictions.\n","\n","\n","\n","**Goals**\n","\n","**train.csv** and **test.csv** contain passenger data from a spaceship journey. The goal is to predict whether a passenger was \"transported\" to another dimension based on various personal details.\n","\n","The **Transported column** is the target variable to predict.\n","\n","By analyzing these features and their relationships, we can build a model to accurately predict whether a passenger will be transported or not."]},{"cell_type":"markdown","id":"1e680d4d","metadata":{"papermill":{"duration":0.007242,"end_time":"2024-09-09T15:02:36.403162","exception":false,"start_time":"2024-09-09T15:02:36.39592","status":"completed"},"tags":[]},"source":["# Import Libraries"]},{"cell_type":"code","execution_count":1,"id":"1ad299cc","metadata":{"_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","execution":{"iopub.execute_input":"2024-09-09T15:02:36.419938Z","iopub.status.busy":"2024-09-09T15:02:36.419548Z","iopub.status.idle":"2024-09-09T15:02:42.617479Z","shell.execute_reply":"2024-09-09T15:02:42.616697Z"},"papermill":{"duration":6.209086,"end_time":"2024-09-09T15:02:42.619754","exception":false,"start_time":"2024-09-09T15:02:36.410668","status":"completed"},"tags":[]},"outputs":[],"source":["import numpy as np # linear algebra\n","import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n","\n","from sklearn.ensemble import GradientBoostingRegressor\n","from sklearn.pipeline import make_pipeline\n","from sklearn.preprocessing import RobustScaler\n","from sklearn.linear_model import ElasticNetCV,LassoCV,RidgeCV\n","from sklearn.svm import SVR\n","from mlxtend.regressor import StackingCVRegressor\n","from xgboost import XGBRegressor\n","from lightgbm import LGBMRegressor\n","from datetime import datetime\n","from sklearn.model_selection import KFold\n","from category_encoders.target_encoder import TargetEncoder\n","\n","import warnings\n","warnings.filterwarnings('ignore')"]},{"cell_type":"markdown","id":"5a7d12cc","metadata":{"papermill":{"duration":0.007598,"end_time":"2024-09-09T15:02:42.635296","exception":false,"start_time":"2024-09-09T15:02:42.627698","status":"completed"},"tags":[]},"source":["# Load and View Data"]},{"cell_type":"code","execution_count":2,"id":"08f0d74c","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:42.652007Z","iopub.status.busy":"2024-09-09T15:02:42.65135Z","iopub.status.idle":"2024-09-09T15:02:42.752922Z","shell.execute_reply":"2024-09-09T15:02:42.751938Z"},"papermill":{"duration":0.112621,"end_time":"2024-09-09T15:02:42.755415","exception":false,"start_time":"2024-09-09T15:02:42.642794","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Name</th>\n","      <th>Transported</th>\n","    </tr>\n","    <tr>\n","      <th>PassengerId</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0001_01</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>B/0/P</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Maham Ofracculy</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>0002_01</th>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>Juanna Vines</td>\n","      <td>True</td>\n","    </tr>\n","    <tr>\n","      <th>0003_01</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>Altark Susent</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>0003_02</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>A/0/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>33.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>1283.0</td>\n","      <td>371.0</td>\n","      <td>3329.0</td>\n","      <td>193.0</td>\n","      <td>Solam Susent</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>0004_01</th>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>16.0</td>\n","      <td>False</td>\n","      <td>303.0</td>\n","      <td>70.0</td>\n","      <td>151.0</td>\n","      <td>565.0</td>\n","      <td>2.0</td>\n","      <td>Willy Santantines</td>\n","      <td>True</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            HomePlanet CryoSleep  Cabin  Destination   Age    VIP  \\\n","PassengerId                                                         \n","0001_01         Europa     False  B/0/P  TRAPPIST-1e  39.0  False   \n","0002_01          Earth     False  F/0/S  TRAPPIST-1e  24.0  False   \n","0003_01         Europa     False  A/0/S  TRAPPIST-1e  58.0   True   \n","0003_02         Europa     False  A/0/S  TRAPPIST-1e  33.0  False   \n","0004_01          Earth     False  F/1/S  TRAPPIST-1e  16.0  False   \n","\n","             RoomService  FoodCourt  ShoppingMall     Spa  VRDeck  \\\n","PassengerId                                                         \n","0001_01              0.0        0.0           0.0     0.0     0.0   \n","0002_01            109.0        9.0          25.0   549.0    44.0   \n","0003_01             43.0     3576.0           0.0  6715.0    49.0   \n","0003_02              0.0     1283.0         371.0  3329.0   193.0   \n","0004_01            303.0       70.0         151.0   565.0     2.0   \n","\n","                          Name  Transported  \n","PassengerId                                  \n","0001_01        Maham Ofracculy        False  \n","0002_01           Juanna Vines         True  \n","0003_01          Altark Susent        False  \n","0003_02           Solam Susent        False  \n","0004_01      Willy Santantines         True  "]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["X_train=pd.read_csv(\"/kaggle/input/spaceship-titanic/train.csv\", index_col='PassengerId')\n","test=pd.read_csv(\"/kaggle/input/spaceship-titanic/test.csv\", index_col='PassengerId')\n","\n","#Training data\n","X_train.head(5)"]},{"cell_type":"code","execution_count":3,"id":"ee79c6b0","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:42.773103Z","iopub.status.busy":"2024-09-09T15:02:42.772821Z","iopub.status.idle":"2024-09-09T15:02:42.790658Z","shell.execute_reply":"2024-09-09T15:02:42.789796Z"},"papermill":{"duration":0.028809,"end_time":"2024-09-09T15:02:42.792529","exception":false,"start_time":"2024-09-09T15:02:42.76372","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Name</th>\n","    </tr>\n","    <tr>\n","      <th>PassengerId</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0013_01</th>\n","      <td>Earth</td>\n","      <td>True</td>\n","      <td>G/3/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>27.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Nelly Carsoning</td>\n","    </tr>\n","    <tr>\n","      <th>0018_01</th>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/4/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>19.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>9.0</td>\n","      <td>0.0</td>\n","      <td>2823.0</td>\n","      <td>0.0</td>\n","      <td>Lerome Peckers</td>\n","    </tr>\n","    <tr>\n","      <th>0019_01</th>\n","      <td>Europa</td>\n","      <td>True</td>\n","      <td>C/0/S</td>\n","      <td>55 Cancri e</td>\n","      <td>31.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Sabih Unhearfus</td>\n","    </tr>\n","    <tr>\n","      <th>0021_01</th>\n","      <td>Europa</td>\n","      <td>False</td>\n","      <td>C/1/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>38.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>6652.0</td>\n","      <td>0.0</td>\n","      <td>181.0</td>\n","      <td>585.0</td>\n","      <td>Meratz Caltilter</td>\n","    </tr>\n","    <tr>\n","      <th>0023_01</th>\n","      <td>Earth</td>\n","      <td>False</td>\n","      <td>F/5/S</td>\n","      <td>TRAPPIST-1e</td>\n","      <td>20.0</td>\n","      <td>False</td>\n","      <td>10.0</td>\n","      <td>0.0</td>\n","      <td>635.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Brence Harperez</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["            HomePlanet CryoSleep  Cabin  Destination   Age    VIP  \\\n","PassengerId                                                         \n","0013_01          Earth      True  G/3/S  TRAPPIST-1e  27.0  False   \n","0018_01          Earth     False  F/4/S  TRAPPIST-1e  19.0  False   \n","0019_01         Europa      True  C/0/S  55 Cancri e  31.0  False   \n","0021_01         Europa     False  C/1/S  TRAPPIST-1e  38.0  False   \n","0023_01          Earth     False  F/5/S  TRAPPIST-1e  20.0  False   \n","\n","             RoomService  FoodCourt  ShoppingMall     Spa  VRDeck  \\\n","PassengerId                                                         \n","0013_01              0.0        0.0           0.0     0.0     0.0   \n","0018_01              0.0        9.0           0.0  2823.0     0.0   \n","0019_01              0.0        0.0           0.0     0.0     0.0   \n","0021_01              0.0     6652.0           0.0   181.0   585.0   \n","0023_01             10.0        0.0         635.0     0.0     0.0   \n","\n","                         Name  \n","PassengerId                    \n","0013_01       Nelly Carsoning  \n","0018_01        Lerome Peckers  \n","0019_01       Sabih Unhearfus  \n","0021_01      Meratz Caltilter  \n","0023_01       Brence Harperez  "]},"execution_count":3,"metadata":{},"output_type":"execute_result"}],"source":["#Testing data\n","test.head(5)"]},{"cell_type":"markdown","id":"e37aa6a2","metadata":{"papermill":{"duration":0.007979,"end_time":"2024-09-09T15:02:42.808753","exception":false,"start_time":"2024-09-09T15:02:42.800774","status":"completed"},"tags":[]},"source":["# Check Null Values in Data"]},{"cell_type":"markdown","id":"69ecbc29","metadata":{"papermill":{"duration":0.007887,"end_time":"2024-09-09T15:02:42.824927","exception":false,"start_time":"2024-09-09T15:02:42.81704","status":"completed"},"tags":[]},"source":["First check Null values in target column. If there is any Null value then we will drop that row"]},{"cell_type":"code","execution_count":4,"id":"da60f70f","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:42.842578Z","iopub.status.busy":"2024-09-09T15:02:42.842295Z","iopub.status.idle":"2024-09-09T15:02:42.84895Z","shell.execute_reply":"2024-09-09T15:02:42.84816Z"},"papermill":{"duration":0.017863,"end_time":"2024-09-09T15:02:42.85087","exception":false,"start_time":"2024-09-09T15:02:42.833007","status":"completed"},"tags":[]},"outputs":[{"data":{"text/plain":["0"]},"execution_count":4,"metadata":{},"output_type":"execute_result"}],"source":["null_values = X_train[\"Transported\"].isnull().sum()\n","null_values"]},{"cell_type":"markdown","id":"41eb52d5","metadata":{"papermill":{"duration":0.008049,"end_time":"2024-09-09T15:02:42.867319","exception":false,"start_time":"2024-09-09T15:02:42.85927","status":"completed"},"tags":[]},"source":["Good news, we don't have any row with Null value in target column.\n","\n","Next lets calculate percentage of Null values in train and test data."]},{"cell_type":"code","execution_count":5,"id":"1117231c","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:42.885081Z","iopub.status.busy":"2024-09-09T15:02:42.884803Z","iopub.status.idle":"2024-09-09T15:02:42.902627Z","shell.execute_reply":"2024-09-09T15:02:42.901546Z"},"papermill":{"duration":0.028868,"end_time":"2024-09-09T15:02:42.90465","exception":false,"start_time":"2024-09-09T15:02:42.875782","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Nan Values in Train data\n","HomePlanet      2.31\n","CryoSleep       2.50\n","Cabin           2.29\n","Destination     2.09\n","Age             2.06\n","VIP             2.34\n","RoomService     2.08\n","FoodCourt       2.11\n","ShoppingMall    2.39\n","Spa             2.11\n","VRDeck          2.16\n","Name            2.30\n","Transported     0.00\n","dtype: float64\n","Nan Values in Test data\n","HomePlanet      2.03\n","CryoSleep       2.17\n","Cabin           2.34\n","Destination     2.15\n","Age             2.13\n","VIP             2.17\n","RoomService     1.92\n","FoodCourt       2.48\n","ShoppingMall    2.29\n","Spa             2.36\n","VRDeck          1.87\n","Name            2.20\n","dtype: float64\n"]}],"source":["def null_percent(df):\n","    per=((df.isnull().sum()/len(df))*100).round(2)\n","    return per\n","print(\"Nan Values in Train data\")\n","print(null_percent(X_train))\n","print(\"Nan Values in Test data\")\n","print(null_percent(test))"]},{"cell_type":"markdown","id":"f53dcafa","metadata":{"papermill":{"duration":0.008239,"end_time":"2024-09-09T15:02:42.921213","exception":false,"start_time":"2024-09-09T15:02:42.912974","status":"completed"},"tags":[]},"source":["# Data Preprocessing"]},{"cell_type":"markdown","id":"bc8e9472","metadata":{"papermill":{"duration":0.008173,"end_time":"2024-09-09T15:02:42.937722","exception":false,"start_time":"2024-09-09T15:02:42.929549","status":"completed"},"tags":[]},"source":["Our target column Transported is boolean i.e True and False, lets convert it to 1 and 0 for using in our models."]},{"cell_type":"code","execution_count":6,"id":"d821ec31","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:42.955762Z","iopub.status.busy":"2024-09-09T15:02:42.955497Z","iopub.status.idle":"2024-09-09T15:02:42.959885Z","shell.execute_reply":"2024-09-09T15:02:42.958978Z"},"papermill":{"duration":0.015547,"end_time":"2024-09-09T15:02:42.961882","exception":false,"start_time":"2024-09-09T15:02:42.946335","status":"completed"},"tags":[]},"outputs":[],"source":["X_train['Transported'] = X_train['Transported'].astype(int)"]},{"cell_type":"code","execution_count":7,"id":"e1bd1aa0","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:42.979524Z","iopub.status.busy":"2024-09-09T15:02:42.979233Z","iopub.status.idle":"2024-09-09T15:02:43.000845Z","shell.execute_reply":"2024-09-09T15:02:42.99991Z"},"papermill":{"duration":0.032884,"end_time":"2024-09-09T15:02:43.002991","exception":false,"start_time":"2024-09-09T15:02:42.970107","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 8693 entries, 0001_01 to 9280_02\n","Data columns (total 13 columns):\n"," #   Column        Non-Null Count  Dtype  \n","---  ------        --------------  -----  \n"," 0   HomePlanet    8492 non-null   object \n"," 1   CryoSleep     8476 non-null   object \n"," 2   Cabin         8494 non-null   object \n"," 3   Destination   8511 non-null   object \n"," 4   Age           8514 non-null   float64\n"," 5   VIP           8490 non-null   object \n"," 6   RoomService   8512 non-null   float64\n"," 7   FoodCourt     8510 non-null   float64\n"," 8   ShoppingMall  8485 non-null   float64\n"," 9   Spa           8510 non-null   float64\n"," 10  VRDeck        8505 non-null   float64\n"," 11  Name          8493 non-null   object \n"," 12  Transported   8693 non-null   int64  \n","dtypes: float64(6), int64(1), object(6)\n","memory usage: 950.8+ KB\n"]}],"source":["X_train.info()"]},{"cell_type":"code","execution_count":8,"id":"26581290","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:43.021011Z","iopub.status.busy":"2024-09-09T15:02:43.020719Z","iopub.status.idle":"2024-09-09T15:02:43.029979Z","shell.execute_reply":"2024-09-09T15:02:43.02914Z"},"papermill":{"duration":0.020295,"end_time":"2024-09-09T15:02:43.031829","exception":false,"start_time":"2024-09-09T15:02:43.011534","status":"completed"},"tags":[]},"outputs":[],"source":["#Name doesn't contribute in prediction, lets drop it\n","X_train.drop(['Name'],axis=1,inplace=True)\n","test.drop(['Name'],axis=1,inplace=True)"]},{"cell_type":"code","execution_count":9,"id":"93bb9f79","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:43.050553Z","iopub.status.busy":"2024-09-09T15:02:43.04978Z","iopub.status.idle":"2024-09-09T15:02:43.101809Z","shell.execute_reply":"2024-09-09T15:02:43.100616Z"},"papermill":{"duration":0.063299,"end_time":"2024-09-09T15:02:43.103728","exception":false,"start_time":"2024-09-09T15:02:43.040429","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Nan Values in Train data\n","HomePlanet      0.0\n","CryoSleep       0.0\n","Cabin           0.0\n","Destination     0.0\n","Age             0.0\n","VIP             0.0\n","RoomService     0.0\n","FoodCourt       0.0\n","ShoppingMall    0.0\n","Spa             0.0\n","VRDeck          0.0\n","Transported     0.0\n","dtype: float64\n","Nan Values in Test data\n","HomePlanet      0.0\n","CryoSleep       0.0\n","Cabin           0.0\n","Destination     0.0\n","Age             0.0\n","VIP             0.0\n","RoomService     0.0\n","FoodCourt       0.0\n","ShoppingMall    0.0\n","Spa             0.0\n","VRDeck          0.0\n","dtype: float64\n"]}],"source":["#Separate categorical and numerical columns for filling empty columns\n","#For categorical columns we will use mode\n","#For numerical columns we will use median\n","\n","categorical_col_train=[col for col in X_train.columns if X_train[col].dtype=='O']\n","numerical_col_train=[col for col in X_train.columns if X_train[col].dtype!='O']\n","\n","categorical_col_test=[col for col in test.columns if test[col].dtype=='O']\n","numerical_col_test=[col for col in test.columns if test[col].dtype!='O']\n","\n","for col in categorical_col_train:\n","    X_train[col].fillna(X_train[col].mode()[0],inplace=True)\n","for col in numerical_col_train:\n","    X_train[col].fillna(X_train[col].median(),inplace=True)\n","\n","for col in categorical_col_test:\n","    test[col].fillna(test[col].mode()[0],inplace=True)\n","for col in numerical_col_test:\n","    test[col].fillna(test[col].median(),inplace=True)\n","\n","#Now check the Null percentage again\n","print(\"Nan Values in Train data\")\n","print(null_percent(X_train))\n","print(\"Nan Values in Test data\")\n","print(null_percent(test))"]},{"cell_type":"markdown","id":"86a4689b","metadata":{"papermill":{"duration":0.008347,"end_time":"2024-09-09T15:02:43.120693","exception":false,"start_time":"2024-09-09T15:02:43.112346","status":"completed"},"tags":[]},"source":["# Data Encoding"]},{"cell_type":"code","execution_count":10,"id":"9348397c","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:43.138712Z","iopub.status.busy":"2024-09-09T15:02:43.138447Z","iopub.status.idle":"2024-09-09T15:02:43.226318Z","shell.execute_reply":"2024-09-09T15:02:43.225336Z"},"papermill":{"duration":0.099053,"end_time":"2024-09-09T15:02:43.22822","exception":false,"start_time":"2024-09-09T15:02:43.129167","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["Warning: No categorical columns found. Calling 'transform' will only return input data.\n","Warning: No categorical columns found. Calling 'transform' will only return input data.\n"]}],"source":["encoder  = TargetEncoder()\n","for feature in categorical_col_test:\n","    X_train[feature] = encoder.fit_transform(X_train[feature], X_train['Transported'])\n","    test[feature] = encoder.transform(test[feature])\n","\n"]},{"cell_type":"markdown","id":"3b4b1444","metadata":{"papermill":{"duration":0.008526,"end_time":"2024-09-09T15:02:43.245718","exception":false,"start_time":"2024-09-09T15:02:43.237192","status":"completed"},"tags":[]},"source":["View Data after encoding"]},{"cell_type":"code","execution_count":11,"id":"f9bdea3c","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:43.264095Z","iopub.status.busy":"2024-09-09T15:02:43.263804Z","iopub.status.idle":"2024-09-09T15:02:43.279976Z","shell.execute_reply":"2024-09-09T15:02:43.279078Z"},"papermill":{"duration":0.027491,"end_time":"2024-09-09T15:02:43.281809","exception":false,"start_time":"2024-09-09T15:02:43.254318","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","      <th>Transported</th>\n","    </tr>\n","    <tr>\n","      <th>PassengerId</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0001_01</th>\n","      <td>0.658846</td>\n","      <td>False</td>\n","      <td>0.438098</td>\n","      <td>0.472199</td>\n","      <td>39.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>0002_01</th>\n","      <td>0.427649</td>\n","      <td>False</td>\n","      <td>0.568206</td>\n","      <td>0.472199</td>\n","      <td>24.0</td>\n","      <td>False</td>\n","      <td>109.0</td>\n","      <td>9.0</td>\n","      <td>25.0</td>\n","      <td>549.0</td>\n","      <td>44.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>0003_01</th>\n","      <td>0.658846</td>\n","      <td>False</td>\n","      <td>0.432184</td>\n","      <td>0.472199</td>\n","      <td>58.0</td>\n","      <td>True</td>\n","      <td>43.0</td>\n","      <td>3576.0</td>\n","      <td>0.0</td>\n","      <td>6715.0</td>\n","      <td>49.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             HomePlanet  CryoSleep     Cabin  Destination   Age    VIP  \\\n","PassengerId                                                              \n","0001_01        0.658846      False  0.438098     0.472199  39.0  False   \n","0002_01        0.427649      False  0.568206     0.472199  24.0  False   \n","0003_01        0.658846      False  0.432184     0.472199  58.0   True   \n","\n","             RoomService  FoodCourt  ShoppingMall     Spa  VRDeck  Transported  \n","PassengerId                                                                     \n","0001_01              0.0        0.0           0.0     0.0     0.0            0  \n","0002_01            109.0        9.0          25.0   549.0    44.0            1  \n","0003_01             43.0     3576.0           0.0  6715.0    49.0            0  "]},"execution_count":11,"metadata":{},"output_type":"execute_result"}],"source":["X_train.head(3)"]},{"cell_type":"code","execution_count":12,"id":"afd42485","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:43.300898Z","iopub.status.busy":"2024-09-09T15:02:43.30061Z","iopub.status.idle":"2024-09-09T15:02:43.316107Z","shell.execute_reply":"2024-09-09T15:02:43.315261Z"},"papermill":{"duration":0.027285,"end_time":"2024-09-09T15:02:43.318026","exception":false,"start_time":"2024-09-09T15:02:43.290741","status":"completed"},"tags":[]},"outputs":[{"data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HomePlanet</th>\n","      <th>CryoSleep</th>\n","      <th>Cabin</th>\n","      <th>Destination</th>\n","      <th>Age</th>\n","      <th>VIP</th>\n","      <th>RoomService</th>\n","      <th>FoodCourt</th>\n","      <th>ShoppingMall</th>\n","      <th>Spa</th>\n","      <th>VRDeck</th>\n","    </tr>\n","    <tr>\n","      <th>PassengerId</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0013_01</th>\n","      <td>0.427649</td>\n","      <td>True</td>\n","      <td>0.503624</td>\n","      <td>0.472199</td>\n","      <td>27.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>0018_01</th>\n","      <td>0.427649</td>\n","      <td>False</td>\n","      <td>0.503624</td>\n","      <td>0.472199</td>\n","      <td>19.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>9.0</td>\n","      <td>0.0</td>\n","      <td>2823.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>0019_01</th>\n","      <td>0.658846</td>\n","      <td>True</td>\n","      <td>0.503624</td>\n","      <td>0.610000</td>\n","      <td>31.0</td>\n","      <td>False</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             HomePlanet  CryoSleep     Cabin  Destination   Age    VIP  \\\n","PassengerId                                                              \n","0013_01        0.427649       True  0.503624     0.472199  27.0  False   \n","0018_01        0.427649      False  0.503624     0.472199  19.0  False   \n","0019_01        0.658846       True  0.503624     0.610000  31.0  False   \n","\n","             RoomService  FoodCourt  ShoppingMall     Spa  VRDeck  \n","PassengerId                                                        \n","0013_01              0.0        0.0           0.0     0.0     0.0  \n","0018_01              0.0        9.0           0.0  2823.0     0.0  \n","0019_01              0.0        0.0           0.0     0.0     0.0  "]},"execution_count":12,"metadata":{},"output_type":"execute_result"}],"source":["test.head(3)"]},{"cell_type":"markdown","id":"78f39f0f","metadata":{"papermill":{"duration":0.0089,"end_time":"2024-09-09T15:02:43.336278","exception":false,"start_time":"2024-09-09T15:02:43.327378","status":"completed"},"tags":[]},"source":["# Separate Target Column"]},{"cell_type":"code","execution_count":13,"id":"4269c5f9","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:43.356186Z","iopub.status.busy":"2024-09-09T15:02:43.355865Z","iopub.status.idle":"2024-09-09T15:02:43.361161Z","shell.execute_reply":"2024-09-09T15:02:43.36044Z"},"papermill":{"duration":0.017624,"end_time":"2024-09-09T15:02:43.363056","exception":false,"start_time":"2024-09-09T15:02:43.345432","status":"completed"},"tags":[]},"outputs":[],"source":["#Separate target column from data\n","y=X_train.Transported\n","X_train.drop(['Transported'],axis=1,inplace=True)"]},{"cell_type":"markdown","id":"0e15cd8c","metadata":{"papermill":{"duration":0.008906,"end_time":"2024-09-09T15:02:43.381104","exception":false,"start_time":"2024-09-09T15:02:43.372198","status":"completed"},"tags":[]},"source":["# Pipelines and Models"]},{"cell_type":"code","execution_count":14,"id":"a1074365","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:43.400815Z","iopub.status.busy":"2024-09-09T15:02:43.400524Z","iopub.status.idle":"2024-09-09T15:02:43.41142Z","shell.execute_reply":"2024-09-09T15:02:43.410614Z"},"papermill":{"duration":0.023025,"end_time":"2024-09-09T15:02:43.413299","exception":false,"start_time":"2024-09-09T15:02:43.390274","status":"completed"},"tags":[]},"outputs":[],"source":["# Set a random seed for reproducibility\n","SEED = 40\n","\n","# Define the number of cross-validation folds\n","K = 10\n","\n","# Create a K-fold cross-validation object\n","kf = KFold(n_splits=K, shuffle=True, random_state=SEED)\n","\n","# Create pipelines for Ridge regression, Lasso regression, Elastic Net regression, Support Vector Regression, Gradient Boosting Regression, LightGBM Regression, and XGBoost Regression\n","\n","# Ridge regression with cross-validation\n","ridge = make_pipeline(RobustScaler(), RidgeCV(alphas=np.arange(14.5, 15.6, 0.1), cv=kf))\n","\n","# Lasso regression with cross-validation\n","lasso = make_pipeline(RobustScaler(), LassoCV(alphas=np.arange(0.0001, 0.0009, 0.0001), random_state=SEED, cv=kf))\n","\n","# Elastic Net regression with cross-validation\n","elasticnet = make_pipeline(RobustScaler(), ElasticNetCV(alphas=np.arange(0.0001, 0.0008, 0.0001), l1_ratio=np.arange(0.8, 1, 0.025), cv=kf))\n","\n","# Support Vector Regression\n","svr = make_pipeline(RobustScaler(), SVR(C=20, epsilon=0.008, gamma=0.0003))\n","\n","# Gradient Boosting Regression\n","gbr = GradientBoostingRegressor(n_estimators=700, \n","                                learning_rate=0.01, \n","                                max_depth=4, \n","                                max_features='sqrt', \n","                                min_samples_leaf=15, \n","                                min_samples_split=10, \n","                                loss='huber', \n","                                random_state=SEED)\n","\n","# LightGBM Regression\n","lgbmr = LGBMRegressor(objective='regression', \n","                      num_leaves=4, \n","                      learning_rate=0.01, \n","                      n_estimators=750, \n","                      max_bin=200, \n","                      bagging_fraction=0.75, \n","                      bagging_freq=5, \n","                      bagging_seed=SEED, \n","                      feature_fraction=0.2, \n","                      feature_fraction_seed=SEED, \n","                      verbose=0)\n","\n","# XGBoost Regression\n","xgbr = XGBRegressor(learning_rate=0.01, \n","                    n_estimators=700, \n","                    max_depth=3, \n","                    gamma=0.001, \n","                    subsample=0.7, \n","                    colsample_bytree=0.7, \n","                    objective='reg:squarederror', \n","                    nthread=-1, \n","                    seed=SEED, \n","                    reg_alpha=0.0001)\n","\n","# StackingCVRegressor\n","stack = StackingCVRegressor(regressors=(ridge, lasso, elasticnet, svr, gbr, lgbmr), meta_regressor=xgbr, use_features_in_secondary=True)"]},{"cell_type":"markdown","id":"8c3538e8","metadata":{"papermill":{"duration":0.00896,"end_time":"2024-09-09T15:02:43.431385","exception":false,"start_time":"2024-09-09T15:02:43.422425","status":"completed"},"tags":[]},"source":["# Create Dictionaries"]},{"cell_type":"code","execution_count":15,"id":"395fd505","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:43.45074Z","iopub.status.busy":"2024-09-09T15:02:43.450457Z","iopub.status.idle":"2024-09-09T15:02:43.455203Z","shell.execute_reply":"2024-09-09T15:02:43.454345Z"},"papermill":{"duration":0.01657,"end_time":"2024-09-09T15:02:43.457078","exception":false,"start_time":"2024-09-09T15:02:43.440508","status":"completed"},"tags":[]},"outputs":[],"source":["# Create a dictionary to store the models\n","models = {'RidgeCV': ridge,\n","          'LassoCV': lasso, \n","          'ElasticNetCV': elasticnet,\n","          'SupportVectorRegressor': svr, \n","          'GradientBoostingRegressor': gbr, \n","          'LightGBMRegressor': lgbmr, \n","          'XGBoostRegressor': xgbr,\n","          'StackingCVRegressor': stack}\n","\n","# Initialize dictionaries for predictions and scores\n","predictions = {}\n","scores = {}\n"]},{"cell_type":"code","execution_count":16,"id":"f4ed21ce","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:02:43.476411Z","iopub.status.busy":"2024-09-09T15:02:43.476105Z","iopub.status.idle":"2024-09-09T15:04:34.666949Z","shell.execute_reply":"2024-09-09T15:04:34.665907Z"},"papermill":{"duration":111.20297,"end_time":"2024-09-09T15:04:34.669271","exception":false,"start_time":"2024-09-09T15:02:43.466301","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["[2024-09-09 15:02:43.480685] Running RidgeCV\n","[2024-09-09 15:02:44.315635] Finished Running RidgeCV in 0.83s\n","[2024-09-09 15:02:44.316124] Running LassoCV\n","[2024-09-09 15:02:44.419299] Finished Running LassoCV in 0.10s\n","[2024-09-09 15:02:44.419393] Running ElasticNetCV\n","[2024-09-09 15:02:44.884859] Finished Running ElasticNetCV in 0.47s\n","[2024-09-09 15:02:44.885432] Running SupportVectorRegressor\n","[2024-09-09 15:02:56.578523] Finished Running SupportVectorRegressor in 11.69s\n","[2024-09-09 15:02:56.578659] Running GradientBoostingRegressor\n","[2024-09-09 15:03:02.580638] Finished Running GradientBoostingRegressor in 6.00s\n","[2024-09-09 15:03:02.580746] Running LightGBMRegressor\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[2024-09-09 15:03:02.956857] Finished Running LightGBMRegressor in 0.38s\n","[2024-09-09 15:03:02.956908] Running XGBoostRegressor\n","[2024-09-09 15:03:03.601100] Finished Running XGBoostRegressor in 0.64s\n","[2024-09-09 15:03:03.601466] Running StackingCVRegressor\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[LightGBM] [Warning] No further splits with positive gain, best gain: -inf\n","[2024-09-09 15:04:34.663743] Finished Running StackingCVRegressor in 91.06s\n"]}],"source":["\"\"\"\n","  Here we train all the models in the 'models' dictionary.\n","  It prints start and end times for each model to track training duration.\n","\"\"\"\n","for name, model in models.items():\n","    start = datetime.now()\n","    print('[{}] Running {}'.format(start, name))\n","    model.fit(X_train, y)\n","    end = datetime.now()\n","    print('[{}] Finished Running {} in {:.2f}s'.format(end, name, (end - start).total_seconds()))\n","\n","\"\"\"\n","  This function takes features (X) as input and performs a weighted blend prediction\n","  using the models in the 'models' dictionary. Each model's prediction is weighted\n","  according to the specified coefficients and then averaged.\n","\"\"\"\n","def blend_predict(X):\n","    return ((0.1 * elasticnet.predict(X)) + \n","            (0.05 * lasso.predict(X)) +\n","            (0.1 * ridge.predict(X)) +\n","            (0.1 * svr.predict(X)) +\n","            (0.1 * gbr.predict(X)) +\n","            (0.15 * xgbr.predict(X)) +\n","            (0.1 * lgbmr.predict(X)) +\n","            (0.3 * stack.predict(X)))"]},{"cell_type":"markdown","id":"f14ff7ea","metadata":{"papermill":{"duration":0.010604,"end_time":"2024-09-09T15:04:34.690985","exception":false,"start_time":"2024-09-09T15:04:34.680381","status":"completed"},"tags":[]},"source":["# Predict and Save Results"]},{"cell_type":"code","execution_count":17,"id":"14d96bd5","metadata":{"execution":{"iopub.execute_input":"2024-09-09T15:04:34.713751Z","iopub.status.busy":"2024-09-09T15:04:34.713407Z","iopub.status.idle":"2024-09-09T15:04:37.090847Z","shell.execute_reply":"2024-09-09T15:04:37.089842Z"},"papermill":{"duration":2.391137,"end_time":"2024-09-09T15:04:37.092831","exception":false,"start_time":"2024-09-09T15:04:34.701694","status":"completed"},"tags":[]},"outputs":[{"name":"stdout","output_type":"stream","text":["[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n","[LightGBM] [Warning] feature_fraction is set=0.2, colsample_bytree=1.0 will be ignored. Current value: feature_fraction=0.2\n","[LightGBM] [Warning] bagging_fraction is set=0.75, subsample=1.0 will be ignored. Current value: bagging_fraction=0.75\n","[LightGBM] [Warning] bagging_freq is set=5, subsample_freq=0 will be ignored. Current value: bagging_freq=5\n"]}],"source":["# Make predictions on the test data using weighted blending\n","preds_test = blend_predict(test)\n","\n","# Convert predictions to integers\n","preds_test = [int(round(x)) for x in preds_test]\n","\n","# Convert integers values to boolean\n","preds_test_bool = [True if pred == 1 else False for pred in preds_test]\n","\n","# Save test predictions to file\n","output = pd.DataFrame({'PassengerId': test.index,'Transported': preds_test_bool})\n","output.to_csv('submission.csv', index=False)"]}],"metadata":{"kaggle":{"accelerator":"none","dataSources":[{"databundleVersionId":3220602,"sourceId":34377,"sourceType":"competition"}],"dockerImageVersionId":30761,"isGpuEnabled":false,"isInternetEnabled":true,"language":"python","sourceType":"notebook"},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.10.14"},"papermill":{"default_parameters":{},"duration":124.091656,"end_time":"2024-09-09T15:04:37.722472","environment_variables":{},"exception":null,"input_path":"__notebook__.ipynb","output_path":"__notebook__.ipynb","parameters":{},"start_time":"2024-09-09T15:02:33.630816","version":"2.6.0"}},"nbformat":4,"nbformat_minor":5}